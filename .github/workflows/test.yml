name: deploy-flow

on:
  push:
    branches:
      - "**"
      - "!main"

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    container: node:14
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2.3.4

      - name: Install npm dependencies
        run: npm install

      - name: Setup Database
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          DB_HOST: postgres
        run: |
          echo deb "http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main" >> /etc/apt/sources.list.d/pgdg.list
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
          apt update
          apt install -y postgresql-client-11
          export PGPASSWORD=$POSTGRES_PASSWORD
          psql -h $DB_HOST -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f ./database/dump.sql

      - name: Run tests
        env:
          DB_NAME: postgres
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_HOST: postgres
        run: npm run test
